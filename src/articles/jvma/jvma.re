= 精算機作るよ！
@<author>{:>=, lrks;twitter:__lrks__}
//profile{
ここ数年は満潮さん（艦これ）と朝潮さん（艦これ）がかわいい。
直近はM200さん（ドルフロ）とシュエリンさん（ブルーアーカイブ）がかわいい。
早潮さん（艦これ）はこわい。
//}
//lead{
コインメックを制御します。
ビルバリも制御します。
気付いたら精算機が出来ていました。
//}

== 精算機の生産
自販機でお金を扱う部品（コインメック、ビルバリ）の制御がしたい！
でも制御したところでどうする？コミケで精算機として使おう！！
ということで精算機を作ります。

精算機の要件は下記とします。

: 現金が扱えること
  最低でも100円玉・500円玉が扱えるようにしたいですね。
  できれば1000円札くらいも。欲を言えばお釣りも出したいです。
: キャッシュレス対応
  以前から対応していますが、これを機に扱いやすくしたいところです。

そして出来上がったものが@<img>{s3}です。

//subfig[生産した精算機]{
//image[fusion360][顧客が説明した案件][scale=0.49]
//image[s3][実装された運用][scale=0.49]
//}

次項からは実現の詳細について述べていきます。

== 現金編
まず現金を扱えるようにします。
元々コインメック、ビルバリを使いたいという動機から始まっているのでこれらの部品を使いました。
最終的にはこれらをRaspberry Pi Pico経由でUSBシリアルに変換し、制御できるようにしています。

=== コインメックについて
そもそもコインメックって何？という話です。
コインメックはコインメカニズム (Coin Mechanism) の略で、硬貨を扱います。
自販機や券売機などで利用されており、見た目は@<img>{g200}、@<img>{fevt451}、@<img>{nri}のような感じです。

//subfig[コインメック（画像は各社カタログより引用）]{
//image[g200][コンラックス CLX-G200シリーズ][scale=0.3]
//image[fevt451][富士電機 FEVT451][scale=0.3]
//image[nri][NRI Currenza C2][scale=0.3]
//}

硬貨（10円・50円・100円・500円）@<fn>{5yen}を投入すると真贋判定が行われ、真貨なら内部のチューブに収金されます。
また、お釣りとしてチューブ内の硬貨を払い出すことも可能です。
//footnote[5yen][機種によっては5円やメダルにも対応しています。]

@<b>{エスクロ}という機能もあり、これは100円・500円を投入しその硬貨を返却する場合に投入硬貨そのものを返す（チューブ内からは払い出さない）機能です。
偽貨が投入され、もしその偽貨を真貨と誤判定した場合でもこの機能があることでチューブ内の硬貨と交換されることを防いでいます。
ただ、この機能を使うと一度の取引で投入できる硬貨の枚数が制限され、100円玉4枚・500円玉3枚までしか入らないようになります。
これはコミケでの利用を考えるとゆゆ式事態です。
もしエスクロ機能を有効にしてしまうと、500円の同人誌で100円玉5枚はNGとせざるを得ません。
機種を選ぶ際はエスクロ機能があるか、設定で無効にできるか確認する必要があります。

国内の製造メーカーとしてはコンラックス、富士電機が有名@<fn>{panasonic}という印象で、
自販機などもこれらが製造したコインメックがよく使われています。
海外製の自販機などを国内で利用する際は、海外メーカー製の日本円仕様コインメックが使われていました@<fn>{nri}。
//footnote[panasonic][2018年ごろまではPanasonicも、また時期不明ですが過去にはサンデンも作っていたようです。]
//footnote[nri][ec-PROというコーヒーマシンではNRI Currenza C2というコインメックのJPY仕様品が使われるようです。NRIは元々ドイツの会社のようですが、現在はCrane Payment Innovations, Inc. (CPI) の一部になっていました。ちなみに、コンラックスもCPIの一部門という扱いのようです。]

これらのコインメックは外部からコマンドを与えることで制御可能です。
通信方式として、国内ではJVMA方式@<fn>{jvma}が採用されています。
海外ではMDB/ICP、ccTalk、DEXなどが使われているようですが、よく調べていないため割愛します。
//footnote[jvma][仕様を策定したJapan Veterinary Medical Association（日本自動販売システム機械工業会）の頭文字を取ってこう呼ばれています。]

なお、コインメックと似た部品としてコインアクセプタ（コインセレクタ）があります。
コインの真贋判定部分だけ行う部品で、見た目としては@<img>{ag100}や@<img>{730a}のような感じです。

//subfig[コインアクセプタ（画像は各社カタログより引用）]{
//image[ag100][コンラックス CLXA-G100シリーズ][scale=0.3]
//image[730a][旭精工 730-A][scale=0.3]
//}

100円玉限定など1金種のみ対応、メダル用など自分で学習させるタイプがあります。
コインメックと比較すると小型で扱いやすそうです。
お釣りは出ませんが、コミケ用と考えると頒布価格をそもそもお釣りが出ないような値に設定したり、
万が一払い出したい場合はコインホッパー（硬貨払出機）と組み合わせることでいけるんじゃないでしょうか。

=== ビルバリについて
続いてビルバリって何？という話です。
ビルバリデータ (Bill Validator) @<fn>{bv}の略で、紙幣を扱います。
自販機や券売機などで利用されるような機種の見た目は下記のような感じです。
//footnote[bv][日本語では「紙幣@<bou>{識別}機」、金融機関などで高精度な真贋判定が求められる際に使われるのは「紙幣@<bou>{鑑別}機」らしいです。メガネ外したら識別と鑑別の識別と鑑別に失敗しそうですね。]

//subfig[ビルバリ（画像は各社カタログより引用）]{
//image[bve21s4][富士電機 BVE21S4][scale=0.25]
//image[m400][コンラックス NBX(R)-M400シリーズ][scale=0.3]
//image[nb][コンラックス NB-4MB80シリーズ][scale=0.35]
//}

紙幣を投入すると真贋判定が行われ、真券なら金庫に収金されます。
ただ、同じビルバリでも見た目がずいぶん異なります。
機種によっては機能もだいぶ異なっており、
例えば1000円札など1金種だけ受け入れ可能か多金種OKか、
一度の取引で紙幣1枚だけ投入可能か連続投入可能か、
紙幣の払い出し可能かなどバラエティ豊かです。

制御方式にも違いがあり、@<img>{nb}はパラレル制御になっています。
詳細は調べていないので不明ですが、紙幣を投入すると特定ピンがONになったりするらしいです。
自販機で使われるタイプは@<img>{bve21s4}や@<img>{m400}で、これはコインメックと同じJVMA方式です。
今回はこのタイプのビルバリを入手し制御してみます。

=== JVMA方式
コインメックとビルバリの制御はJVMA方式で行われることがわかりました。
ここではJVMA方式@<fn>{vccs}について調べていきます。
//footnote[vccs][VCCSとも呼ばれるようです。シリアル通信のため「シリアル伝送方式」とも、また後述の特許公報を読むと「ベンダーコントロールシステム」「VCSバス」「Vender Control Coca-Cola System」と書かれていることもありました。あと海外メーカーの資料だと「JPSTD」とも。]

なお、JVMA自体は他にも「JVMAモバイルベンディング仕様」@<fn>{jvma-mobile}、
「自販機赤外線通信規格」@<fn>{jvma-ir}、
「自動販売機据付基準マニュアル」@<fn>{jvma-sue}などを定めています。
これらもJVMA方式といえばそうなのかも知れませんが、ここではJVMA方式といえばコインメックとビルバリの通信を指すものとします。
//footnote[jvma-mobile][電子マネー関連と思われるが内容は不明。]
//footnote[jvma-ir][自販機と赤外線通信を行う際の仕様と思われるが内容は不明。]
//footnote[jvma-sue][JIS規格「自動販売機の据付基準」とは別らしいが内容は不明。ただし大阪府立中央図書館と大阪府立中之島図書館に蔵書あり。]

ただ、JVMA方式の情報はあまり公開されていません。
それでも特許公報を調べることである程度理解できました。

また、コインメックやビルバリをPC接続し制御する基板がいくつか販売されています。
法人向けのため個人で購入することはまず無理だと思いますが、商品ページやサンプルプログラムは見ることができました。
JVMA方式の制御コマンドそのものは記載されていませんが、基板側のコマンドは載っておりおぼろげながらJVMA方式のコマンドも浮かんできます。

さらに勢い余って@<img>{ticketvend}の食券券売機@<fn>{jihanki}@<fn>{jihanki2}を購入してしまいました。
本当は自販機が欲しかったのですが部屋には置けない、近所のガレージを借りる気でいたのですが満室で借りられない、
券売機にもコインメックがあるのでは？卓上券売機なら部屋に置けるのでは？ということで購入しました。
動作が不安定、サポートなしという筐体でも結構します。もっと他のことにお金使ったほうが良いんじゃないですかね。。。
とはいえ、実機があると検証もしやすかったことは事実です。
でもやっぱり必ずしも券売機まで買う必要はあったか、特許公報+取扱説明書に加えて試行錯誤すれば目的は達成出来たのではと思う気持ちもあります。
//image[ticketvend][らぁめぇ しぐこう 開店][scale=0.49]
//footnote[jihanki][もともとラーメン屋（閉店済み）で使われていたようです。メニューと価格を基に食べログなどを見ると現役時代の姿が確認できます。]
//footnote[jihanki2][部屋に自販機を置く場合は先行事例があります。 事例1:@<href>{https://twitter.com/uni_mafumafu/status/1444240003610021894} 事例2:@<href>{https://www.youtube.com/watch?v=9c4DjWidCVU}]

次からはこうして得たJVMA方式の情報をまとめます。
ただ、あいにくですがここで述べるのは物理層とデータリンク層のみです。
コマンドについては記載しません。
物理層とデータリンク層については特許公報由来の情報のためおおっぴらに出典を示せます。
コマンドについては前述の制御基板の情報や実機から得た情報となり、これを公開するのは懸念があります。
そのため、今回は記載しません。
決してまだ調べていないわけではなく、本当に調べて制御はできています。
これは本当です。信じてください。

==== 物理層・データリンク層
ということで、物理層・データリンク層です。
特許公報と気になった記述を引用します。
//quote{
三洋電機株式会社．自動販売機の制御装置．特開2000-172908

「従来の自動販売機では、主制御部と各端末制御部との間で行う通信は、図３に示すように、ＳＹＮラインをロー（Ｌ）にしてから通信を始め、最初の１バイトの途中でハイ（Ｈ）に戻す。」
「また、通信文は、コマンド（ＣＯＭ）とその反転信号で始まる。」
「コマンドは、先頭１ビットをスタートビットとしてローとし、その後に通信相手を示す５ビットと通信の種類を示す３ビット、パリティビット及びストップビットを持っている。そして、通信速度は、４８００ｂｐｓと比較的低速の通信速度で統一されている。」
//}
//quote{
富士電機株式会社．貨幣鑑別装置の通信監視装置．特開2001-34821

「共通バスライン３０は本例では３本の通信線からなる通信ライン３１と、２４Ｖ，８Ｖ，共通アースライン（ＧＮＤ）の３本の電源線からなる電源ライン３２とによって構成されている。」
「なお、通信ライン３１は、主制御部１０が各従制御部２０（２１～２６）にコマンドやデータを送信するシリアル信号線としてのＯＵＴ信号線３１１、主制御部１０が各従制御部２０（２１～２６）からデータを受信するシリアル信号線としてのＩＮ信号線３１２、主制御部１０がＯＵＴ信号線３１１にコマンドやデータを出力する直前に数１００μｓのパルス幅で出力する同期信号を送信するための信号線としてのＳＹＮ信号線３１３によって構成されている。」
「この分散制御システムの制御は、いわゆるポーリング／セレクティング方式によって行われている。即ち主制御部１０は各従制御部２０（２１～２６）を規則的に１局ずつアドレス指定してコマンドを送り、そのつど当該の従制御部２０から主制御部１０へのデータの送信を求める（ポーリング）。また別に、主制御部１０は必要な従制御部２０をアドレス指定してコマンドを送り、当該の従制御部２０が主制御部１０からのデータを受信することを求める（セレクティング）。」
//}
//quote{
ザコカコーラカンパニー．販売機デュアル母線構成．特表2002-510103

「一般ＶＣＣＳ電気仕様は、直列、８データビット、７線（２個のデータ、同期、共通信号、電力接地２４Ｖ、８Ｖ）、４８００ビット／秒、０－２４ボルト信号である。」
「ＭＤＢ及びＶＣＣＳの両標準は、０から３１までの装置アドレスを使用する。」
「ＶＣＣＳプロトコールは分離方向性(separate directional)（制御装置から周辺装置へ）の同期信号線を使用する。」
//}
//quote{
富士電機リテイルシステムズ株式会社．自動販売機．特開2009-223677

「自販機制御に使用されているシリアル通信仕様では、命令の種類を表す「コマンド」と、コマンドに付随して内容を表す「データ」が存在する。」
「データとしては８ビットの１６進数で表現できる、００Ｈ～ＦＦＨまでの２５６通りを扱う。」
「自販機内の上記主制御部５２、各端末５３間の通信では、「同期信号」を送受信する為の専用の制御線を別途設けて、この同期信号に同期させてコマンドを送信し、同期信号を送信しないデータ送信と区別するようにしている。」
「また、同期信号として十分に長い信号を入力することで、端末５３をハードリセットできる機能も備えている。」
「主制御部５２は、まず「同期信号線」５４上に同期信号を規定時間（短時間；図示の例では０．２μs～２ms）出力（ＯＮ）し、続いて「送信線」５５上にコマンドを出力する。」
「コマンドは、各端末５３毎に異なったコードとなっており、各端末５３は受信したコマンドが自端末に対応するコマンドコードであった場合には、該コマンドに応じた処理を実行することになっている」
「上記自端末向けのコマンドを受信した端末５３は、「受信線」５６上にＡＣＫ信号を出力する。このＡＣＫ信号を受信した主制御部５２は、「送信線」５５上にデータを出力し、このデータを受信した端末５３は「受信線」５６上にＡＣＫ信号を出力する。」
「一方、電源投入時に主制御部５２が端末５３を制御可能になるまでの間や、端末５３が暴走する等して制御不能になった場合等には、主制御部５２は図７（ｂ）に示すように「同期信号線」５４上に同期信号を一定時間以上（長時間；図示の例では数百ms程度）出力する。」
「これら回路構成は何れも基本的に、２つのインバータＮ１、Ｎ２が直列に接続された構成となっている。図示のインバータＮ１、Ｎ２は、何れも、オープン・コレクタのＮＯＴ回路である。」
「実際には出力側はＮＰＮトランジスタのオープンコレクタ、入力側はトランジスタのベース入力となっている例が多い。」
「このオープン出力の特性を生かして、Ｖ１、制御電源（５Ｖや３．３Ｖ）と異なる信号伝達用のＶ２電源（２４Ｖ等）を、インタフェース電源とすることで、ノイズ等のマージンを向上させている。」
//}

特に関係しそうな箇所をまとめると、下記のようになります。

 * 電源線がある
   ** 24V および 8V
 * 同期線がある
   ** 「ＳＹＮラインをロー（Ｌ）にしてから通信を始め、最初の１バイトの途中でハイ（Ｈ）に戻す。」（特開2000-172908）
   ** 「コマンドやデータを出力する直前に数１００μｓのパルス幅で出力」（特開2001-34821）
   ** 「同期信号に同期させてコマンドを送信し、同期信号を送信しないデータ送信と区別」（特開2009-223677）
   ** 「同期信号を規定時間（短時間；図示の例では０．２μs～２ms）出力（ＯＮ）し、続いて「送信線」５５上にコマンドを出力する。」（特開2009-223677）
   ** 少なくともコマンドを送る前には同期線にパルスを出力する
   ** 出力時間や、データ送信の場合も送るのかは検証の余地あり
 * シリアル信号線がある
   ** 送信 および 受信
   ** 4800bps
   ** 8bit
   ** パリティあり
 * 出力はオープンコレクタ
 * コマンドについて
   ** 上位5bitは通信相手のアドレス、下位3bitは通信の種類を示す
   ** コマンドの後には、コマンドの反転信号が続く
   ** コマンド送信後にはACKが返る
   ** データが存在する場合はこのACKを受信してから送る

多少曖昧な箇所はありますが、これだけ分かれば試行錯誤でいけそうです。
コインメックやビルバリ側との通信に成功したらファジング的にコマンドを投げてみたりして、
あとは流れで有効なコマンドも分かるんじゃないでしょうか。

=== 実装
以上でコインメックとビルバリの制御方法を完全に理解したことにして、実際に制御してみます。
シリアル通信ということは分かったので、その辺のRaspberry Piから制御しても良いといえば良いですが、
同期線の扱いでタイミングが重視されそうなことを踏まえるとOSの載ったボードからは制御したくありません。
そこで間に中間ボードを挟み、この中間ボードがコインメックとビルバリを制御、中間ボードは上位機器から操作される構成にします。

挟むものは何でも良いです。
みんな大好きLPC1114を使おうと思ったのですが昨今情勢により入手できず、ここではRaspberry Pi Picoを使うことにしました。
何でもRaspberry Piと付ければ売れると思って…と若干毛嫌いしていましたが実際使ってみると、
上位機器ともUSBシリアルで利用できますし、UARTのDMA転送が簡単だったり、マルチコアが使えるのも便利でした。
これが600円程度なら他のボード使う人なんて居なくなりますわ（お嬢様）。

電源については24Vと8Vが必要です。
24Vについては秋月で売っているACアダプタを利用しています。
8Vについてはなかなか選択肢がありません。
8VのACアダプタは入手に難あり、
リニアレギュレータでの降圧は簡単ですが24Vからの降圧は損失が大きすぎて非現実的、
一度9VをACアダプタか電源モジュールで作成してからLDOで降圧はまわりくどい…など考えた結果、
最終的にはスイッチングレギュレータ(NJW1933)で24Vから降圧することにしました。

こうして出来上がったものが@<img>{pico}です。

//subfig[中間ボード]{
//image[kicad][顧客が説明した案件2][scale=0.49]
//image[pico][実装された運用2][scale=0.49]
//}

現金編おわり。

== キャッシュレス編
続いてキャッシュレス編です。
これについてはあまり新しいものはありません。

クレジットカードやSuica決済については、Squareを利用しています。
C99からはSquare Terminalを導入し、Terminal API@<fn>{terminal-api}で操作しています。
//footnote[terminal-api][@<href>{https://developer.squareup.com/reference/square/terminal-api}]

QR決済についてはUnivaPayのAPIを利用しています。
こちら側で行うことはQRコードを読み取ってAPIを叩けば良いです。
過去、DENSO AT20QやHoneywell Xenon1900など様々なバーコードリーダーでコードを読み取ってきましたが、
今回からはDENSO QK30@<fn>{qk30}を導入しました。
誰でも入手できる取扱説明書によると、USB-COM経由で読み取り許可/不可コマンドを流せるようなのでこれを使おうと思います@<fn>{copy}。
//footnote[qk30][正確にはパスポート読み取りに対応したQK30-OP-Uからパスポート読み取り用アタッチメントを取り外した何かです。]
//footnote[copy][執筆時点ではまだ触っていません。今回がコピー本なのも納得ですね。]

実はNAYAXのリーダー（@<img>{nayax}）をあわよくば使えるかな？モニタになにか表示したりQRコード読み取りさせたり？と思って買いましたが、
あわよくいかなかったので断念しました。
//image[nayax][NAYAX VPOS Touch][scale=0.6]
ebayでびくびくしながら買ったんですけどね、本体も高いしイスラエル発で送料も結構かかったんですけどね…だからどうしたって話ですが…。

== ケースについて
日記みたいになっちゃいますが、1年ほど前に3Dプリンタを導入しました。
これ要る？DMM.makeやSHAPEWAYS、WENEXT、最近だとJLCPCBに外注すれば？とも思っていましたが、結構使っています。
CNCも買って基板加工したいが集合住宅だと無理、レーザーカッターも買ってアクリルやMDF切りまくりたいですが排気がムリムリかたつむりです。

今回のケース？というかコインメックやビルバリ、Square Terminal、QK30を固定するフレームも3Dプリンタで出力しました。
PLA+樹脂やPETG樹脂を使っていますが、少なくとも夏or冬の屋内で6時間程度使う強度的には問題なさそうです。
問題あれば金属を使うことになる、ミスミのCナビやMeviyを使う良い機会だと思っていたのですが…。

あと前面に貼るようなパネルは作っておらず前髪スカスカですが、いずれアクリル板とかで覆いたいですね。
1枚だけの加工ならアクセアが一番手間がかからずで安めと思っている@<fn>{uv}のでそこに頼む予定です。
//footnote[uv][他に良い業者があったらこっそり教えてください。アクセアはアクリル板のUV印刷も手軽と思っています。ちなみに透明アクリルへのUV印刷は裏面に白版を設定する必要があります。そして白版はカラー版よりも少し小さくする必要があり、これは細らせと呼ばれます。わからせみたいですね。スガキヤ・わたらせ渓谷・おしながき（575）]

== まとめ
精算機を生産しました。
